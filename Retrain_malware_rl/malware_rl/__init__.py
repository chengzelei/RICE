from gym.envs.registration import register
from sklearn.model_selection import train_test_split
from malware_rl.envs.utils import interface

# create a holdout set
sha256 = interface.get_available_sha256()
# sha256_train, sha256_holdout = train_test_split(sha256, test_size=2837, random_state=0)   #2838 200
sha256_holdout, sha256_train  = train_test_split(sha256, test_size=200, random_state=0)   #switch the train and test
print(len(sha256_train), len(sha256_holdout))
MAXTURNS = 10

register(
    id="malconv-train-v0",
    entry_point="malware_rl.envs:MalConvEnv",
    kwargs={
        "random_sample": False,
        "maxturns": MAXTURNS,
        "sha256list": sha256_train,
    },
)

register(
    id="malconv-mask-v0",
    entry_point="malware_rl.envs:MalConvEnv_mask",
    kwargs={
        "random_sample": False,
        "maxturns": MAXTURNS,
        "sha256list": sha256_train,
    },
)

register(
    id="malconv-retrain-v0",
    entry_point="malware_rl.envs:MalConvEnv_retrain",
    kwargs={
        "random_sample": False,
        "maxturns": MAXTURNS,
        "sha256list": sha256_train,
    },
)

register(
    id="malconv-test-v0",
    entry_point="malware_rl.envs:MalConvEnv",
    kwargs={
        "random_sample": False,
        "maxturns": MAXTURNS,
        "sha256list": sha256_holdout,
    },
)

register(
    id="ember-train-v0",
    entry_point="malware_rl.envs:EmberEnv",
    kwargs={
        "random_sample": False,
        "maxturns": MAXTURNS,
        "sha256list": sha256_train,
    },
)

register(
    id="ember-test-v0",
    entry_point="malware_rl.envs:EmberEnv",
    kwargs={
        "random_sample": False,
        "maxturns": MAXTURNS,
        "sha256list": sha256_holdout,
    },
)

register(
    id="sorel-train-v0",
    entry_point="malware_rl.envs:SorelEnv",
    kwargs={
        "random_sample": True,
        "maxturns": MAXTURNS,
        "sha256list": sha256_train,
    },
)

register(
    id="sorel-test-v0",
    entry_point="malware_rl.envs:SorelEnv",
    kwargs={
        "random_sample": False,
        "maxturns": MAXTURNS,
        "sha256list": sha256_holdout,
    },
)
